specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: MultiSigWallet
    network: mainnet
    source:
      address: "{{multiSig}}"
      abi: MultiSigWallet
      startBlock: {{multiSigStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ConfirmationEvent
        - DepositEvent
        - ExecutionEvent
        - ExecutionFailureEvent
        - OwnerAdditionEvent
        - OwnerRemovalEvent
        - RequirementChangeEvent
        - RevocationEvent
        - SubmissionEvent
      abis:
        - name: MultiSigWallet
          file: ./abis/MultiSigWallet.json
      eventHandlers:
        - event: Confirmation(indexed address,indexed uint256)
          handler: handleConfirmation
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: Revocation(indexed address,indexed uint256)
          handler: handleRevocation
        - event: Execution(indexed uint256)
          handler: handleExecution
        - event: ExecutionFailure(indexed uint256)
          handler: handleExecutionFailure
        - event: OwnerAddition(indexed address)
          handler: handleOwnerAddition
        - event: OwnerRemoval(indexed address)
          handler: handleOwnerRemoval
        - event: RequirementChange(uint256)
          handler: handleRequirementChange
        - event: Submission(indexed uint256)
          handler: handleSubmission
      file: ./src/multisig.ts
  {{#isHarmony}}
  - kind: ethereum/contract
    name: Deposit
    network: mainnet
    source:
      address: "{{deposit}}"
      abi: Deposit
      startBlock: {{depositStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ReturnedEvent
      abis:
        - name: Deposit
          file: ./abis/Deposit.json
      eventHandlers:
        - event: Returned(indexed address,uint256)
          handler: handleReturnedDeposit
      file: ./src/harmony.ts
  - kind: ethereum/contract
    name: BUSDHmyManager
    network: mainnet
    source:
      address: "{{busdManager}}"
      abi: BUSDHmyManager
      startBlock: {{busdStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: BUSDHmyManager
          file: ./abis/BUSDHmyManager.json
      eventHandlers:
        - event: Burned(indexed address,indexed address,uint256,address)
          handler: handleBurn
        - event: Minted(address,uint256,address,bytes32)
          handler: handleMint
      file: ./src/harmony.ts
  - kind: ethereum/contract
    name: ERC20HmyManager
    network: mainnet
    source:
      address: "{{erc20Manager}}"
      abi: ERC20HmyManager
      startBlock: {{erc20StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: ERC20HmyManager
          file: ./abis/ERC20HmyManager.json
      eventHandlers:
        - event: Burned(indexed address,indexed address,uint256,address)
          handler: handleBurn
        - event: Minted(address,uint256,address,bytes32)
          handler: handleMint
      file: ./src/harmony.ts
  - kind: ethereum/contract
    name: ERC721HmyManager
    network: mainnet
    source:
      address: "{{erc721Manager}}"
      abi: ERC721HmyManager
      startBlock: {{erc721StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: ERC721HmyManager
          file: ./abis/ERC721HmyManager.json
      eventHandlers:
        - event: Burned(indexed address,indexed address,uint256,address)
          handler: handleBurn
        - event: Minted(address,uint256,address,bytes32)
          handler: handleMint
      file: ./src/harmony.ts
  {{/isHarmony}}
  {{^isHarmony}}
  - kind: ethereum/contract
    name: BUSDEthManager
    network: mainnet
    source:
      address: "{{busdManager}}"
      abi: BUSDEthManager
      startBlock: {{busdStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: BUSDEthManager
          file: ./abis/BUSDEthManager.json
      eventHandlers:
        - event: Locked(indexed address,indexed address,uint256,address)
          handler: handleLock
        - event: Unlocked(indexed address,uint256,address,bytes32)
          handler: handleUnlock
      file: ./src/ethereum.ts
  - kind: ethereum/contract
    name: ERC20EthManager
    network: mainnet
    source:
      address: "{{erc20Manager}}"
      abi: ERC20EthManager
      startBlock: {{erc20StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: ERC20EthManager
          file: ./abis/ERC20EthManager.json
      eventHandlers:
        - event: Locked(indexed address,indexed address,uint256,address)
          handler: handleLock
        - event: Unlocked(indexed address,uint256,address,bytes32)
          handler: handleUnlock
      file: ./src/ethereum.ts
  - kind: ethereum/contract
    name: ERC721HmyManager
    network: mainnet
    source:
      address: "{{erc721Manager}}"
      abi: ERC721HmyManager
      startBlock: {{erc721StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: ERC721HmyManager
          file: ./abis/ERC721HmyManager.json
      eventHandlers:
        - event: Locked(indexed address,indexed address,uint256,address)
          handler: handleLock
        - event: Unlocked(indexed address,uint256,address,bytes32)
          handler: handleUnlock
      file: ./src/ethereum.ts
  {{/isHarmony}}
