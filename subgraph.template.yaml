specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  # MULTI SIG EVENTS
  {{#multiSigManagers}}
  - kind: ethereum/contract
    name: {{name}}
    network: mainnet
    source:
      address: "{{contract}}"
      abi: {{abi}}
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ConfirmationEvent
        - DepositEvent
        - ExecutionEvent
        - ExecutionFailureEvent
        - OwnerAdditionEvent
        - OwnerRemovalEvent
        - RequirementChangeEvent
        - RevocationEvent
        - SubmissionEvent
      abis:
        - name: {{abi}}
          file: ./abis/{{abi}}.json
      eventHandlers:
        - event: Confirmation(indexed address,indexed uint256)
          handler: handleConfirmation
        - event: Deposit(indexed address,uint256)
          handler: handleDeposit
        - event: Revocation(indexed address,indexed uint256)
          handler: handleRevocation
        - event: Execution(indexed uint256)
          handler: handleExecution
        - event: ExecutionFailure(indexed uint256)
          handler: handleExecutionFailure
        - event: OwnerAddition(indexed address)
          handler: handleOwnerAddition
        - event: OwnerRemoval(indexed address)
          handler: handleOwnerRemoval
        - event: RequirementChange(uint256)
          handler: handleRequirementChange
        - event: Submission(indexed uint256)
          handler: handleSubmission
      file: ./src/multisig.ts
  {{/multiSigManagers}}
  
  # DEPOSIT EVENTS
  {{#depositManagers}}
  - kind: ethereum/contract
    name: {{name}}
    network: mainnet
    source:
      address: "{{contract}}"
      abi: {{abi}}
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ReturnedEvent
      abis:
        - name: {{abi}}
          file: ./abis/{{abi}}.json
      eventHandlers:
        - event: Returned(indexed address,uint256)
          handler: handleReturnedDeposit
      file: ./src/harmony.ts
  {{/depositManagers}}

  # MINT AND BURN EVENTS
  {{#mintManagers}}
  - kind: ethereum/contract
    name: {{name}}
    network: mainnet
    source:
      address: "{{contract}}"
      abi: {{abi}}
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: {{abi}}
          file: ./abis/{{abi}}.json
      eventHandlers:
        - event: Burned(indexed address,indexed address,uint256,address)
          handler: handleBurn
        - event: Minted(address,uint256,address,bytes32)
          handler: handleMint
      file: ./src/harmony.ts
  {{/mintManagers}}

  # LOCK AND UNLOCK EVENTS
  {{#lockManagers}}
  - kind: ethereum/contract
    name: {{name}}
    network: mainnet
    source:
      address: "{{contract}}"
      abi: {{abi}}
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - MintedEvent
        - BurnedEvent
      abis:
        - name: {{abi}}
          file: ./abis/{{abi}}.json
      eventHandlers:
        - event: Locked(indexed address,indexed address,uint256,address)
          handler: handleLock
        - event: Unlocked(address,uint256,address,bytes32)
          handler: handleUnlock
      file: ./src/ethereum.ts
  {{/lockManagers}}